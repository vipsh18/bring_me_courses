function get(name) {
	if ((name = new RegExp('[?&]' + encodeURIComponent(name) + '=([^&]*)').exec(location.search)))
		return decodeURIComponent(name[1])
}

var search_box = document.getElementById('q')
if (get('q') != null) search_box.value = get('q')

const tags = [
	'Deep Learning',
	'Artificial Intelligence',
	'Neural Networks',
	'Database Systems',
	'Intro To Computer Science',
	'Python',
	'Computer Organization',
	'Web Development',
	'Operating Systems',
	'Machine Learning',
	'Computer Vision',
	'Algorithms',
	'Computer Networks',
	'Computing Concepts',
	'Data Structures',
	'Programming',
	'Oop',
	'Java',
	'Systems Programming',
	'Network Programming',
	'Concurrency',
	'Processors',
	'Compilers',
	'SQL',
	'Flask',
	'Lisp',
	'Problem Solving',
	'Objective C',
	'C#',
	'Beginner Student Language',
	'Racket',
	'Programming Paradigms',
	'Pygame',
	'Game Development',
	'C',
	'C++',
	'Functional Programming',
	'Data Science',
	'Numpy',
	'Scipy',
	'Bootcamp',
	'Jupyter',
	'IPython',
	'Electrical Engineering',
	'Software Engineering',
	'Memory Management',
	'Rust',
	'Distributed Systems',
	'Procedural SQL',
	'Version Control',
	'Dynamic Programming',
	'Bayesian Networks',
	'Reasoning',
	'Reinforcement Learning',
	'Supervised Learning',
	'Unsupervised Learning',
	'Neural Networks',
	'Support Vector Machines',
	'Octave',
	'Natural Language Processing',
	'Natural Language Understanding',
	'Automatic Speech Recognition',
	'Generative Models',
	'Markov Models',
	'Regression',
	'Data Mining',
	'Probabilistic Graphical Methods',
	'Sequence Modeling',
	'Tensorflow',
	'Facial Recognition',
	'AWS',
	'Convolutional Neural Networks',
	'Recurrent Neural Networks',
	'Autoencoders',
	'Machine Translation',
	'Pytorch',
	'Discrete Mathematics',
	'HTML',
	'CSS',
	'JavaScript',
	'jQuery',
	'Programming Languages',
	'Computer Architecture',
	'Assembly Language',
	'Security',
	'Encryption',
	'Computer Graphics',
	'Robotics',
	'Calculus',
]

const colors = [
	'#75a9d1',
	'#bc66e0',
	'#ce5e52',
	'#bb86fc',
	'#03dac5',
	'#ffde03',
	'#ff0266',
	'#90ee02',
	'#ff8d00',
	'#2196f3',
	'#e66d6d',
	'#65e465',
	'#df3cdf',
	'#7171ee',
]

// create tag buttons dynamically
var tag_btns_div = document.querySelector('.tag_btns_div')
tags.forEach(tag => {
	tag_btns_div.innerHTML += `<a href="?q=${tag}" role="button" class="badge-btn mt-1 mr-1" style="background-color: ${
		colors[Math.floor(Math.random() * 14)]
	}">${tag}</a>`
})
